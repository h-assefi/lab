input {
  # file {
  #   #https://www.elastic.co/guide/en/logstash/current/plugins-inputs-file.html
  #   #default is TAIL which assumes more data will come into the file.
  #   #change to mode => "read" if the file is a compelte file.  by default, the file will be removed once reading is complete -- backup your files if you need them.
  #   mode => "tail"
  #   path => "/usr/share/logstash/ingest_data/*"
  #   codec => "json"
  # },
  # tcp {
  #   port => 5000
  #   # host => localhost
  #   # id => "socket-server"
  #   # type => syslog
  #   codec => json
  # }
}

# Uncomment the input you want to use.
# For example, to use the file input, uncomment the file input block above.


filter {
  # Ensure all logs have an "app_name" field with a default value.
  # This is useful if you want to categorize logs by application.
  if ![app_name] {
    mutate { add_field => { "app_name" => "unknown" } }
  }

  # If you get the invalid_index_name_exception error, it may be due to the app_name containing uppercase letters or special characters.
  # This filter will convert the app_name to lowercase to avoid such issues.
  # This is particularly useful for ensuring consistent index naming.
  # If you want to keep the original app_name, you can use a different field name.
  # For example, you can use "app_name_lower" instead of modifying the original "app_name".
  mutate {
    lowercase => [ "app_name" ]
  }
}


output {
  elasticsearch {
    # Uncomment the next line to use a specific index name format.
    # This can be useful for organizing logs by application or date.
    # For example, to use a specific app name:
    # index => "%{app_name}-logs-%{+YYYY.MM.dd}"

    # Default index name format, which includes the date.
    index => "logstash-%{+YYYY.MM.dd}"
    hosts=> "${ELASTIC_HOSTS}"
    user=> "${ELASTIC_USER}"
    password=> "${ELASTIC_PASSWORD}"
    cacert=> "certs/ca/ca.crt"
  }

  stdout { 
    codec => rubydebug 
  }
}
